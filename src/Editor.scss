@use 'sass:math';


@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.editor-container {
  display: flex;
  width: 100%;
  min-height: 100vh;
  position: relative;
}

.editor-main {
  flex: 1;
  transition: margin-left 0.3s ease;
  width: 100%;
  
  &.sidebar-expanded {
    margin-left: 280px;
  }
  
  &.sidebar-collapsed {
    margin-left: 48px;
  }
}

// Responsive adjustments
@media (max-width: 768px) {
  .editor-main {
    &.sidebar-expanded {
      margin-left: 0;
    }
    
    &.sidebar-collapsed {
      margin-left: 48px;
    }
  }
}

@media (max-width: 480px) {
  .editor-main {
    &.sidebar-expanded {
      margin-left: 0;
    }
    
    &.sidebar-collapsed {
      margin-left: 48px;
    }
  }
}

.ProseMirror {
  & * {
    transition: background 0.3s ease;
  }

  [fade-in="true"] &>* {
    animation: fadeIn ease 0.5s;
    opacity: 0;
    animation-fill-mode: forwards;

    @for $i from 1 through 50 {
      &:nth-child(#{$i}) {
        animation-delay: #{math.log($i, 10) / 5}s;
      }
    }
  }

  & p.is-editor-empty:first-child::before {
    color: var(--outlinegray);
    content: attr(data-placeholder);
    float: left;
    height: 0;
    pointer-events: none;
  }

  &:focus {
    outline: none;
  }
}

span[data-time] {
  padding: 0.15em 0.3em;
  border-radius: 5px;
  position: relative;
  white-space: nowrap;

  &.highlight {
    background: var(--secondary) !important;
    transition: background 0.3s ease;
  }

  &::after {
    visibility: hidden;
    opacity: 0;
    content: attr(locale-string);
    position: absolute;
    bottom: 100%;
    left: 0;
    background: var(--light);
    padding: 0.15em 0.3em;
    margin-bottom: 5px;
    border-radius: 5px;
    border: 1px solid var(--outlinegray);
    white-space: nowrap;
    overflow-x: visible;
    transition: opacity 0.3s ease;
  }

  &:hover::after {
    opacity: 1;
    visibility: visible;
  }
}

span[data-priority] {
  padding: 0.15em 0.3em;
  border-radius: 5px;
  font-weight: 600;
  text-transform: uppercase;
  position: relative;
  white-space: nowrap;
  transition: all 0.3s ease;

  &:hover {
    transform: scale(1.05);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  &::after {
    visibility: hidden;
    opacity: 0;
    content: attr(title);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background: var(--light);
    padding: 0.15em 0.3em;
    margin-bottom: 5px;
    border-radius: 5px;
    border: 1px solid var(--outlinegray);
    white-space: nowrap;
    font-weight: normal;
    font-size: 0.9em;
    text-transform: none;
    transition: opacity 0.3s ease;
  }

  &:hover::after {
    opacity: 1;
    visibility: visible;
  }
}

.has-focus {
  border-radius: 5px;
  background: var(--lightgray);
}

.newline-handle {
  opacity: 0.1;
  cursor: pointer;
  transition: opacity 0.3s ease;

  &:hover {
    opacity: 0.8;
  }
}

ul[data-type="taskList"] {
  list-style: none;
  margin-left: 0;
  padding: 0;

  li {
    align-items: flex-start;
    display: flex;

    >label {
      flex: 0 0 auto;
      margin-right: 0.5rem;
      user-select: none;
      position: relative;

      &>span {
        padding: 2px;
        border: 1px solid var(--outlinegray);
        cursor: pointer;
        height: 18px;
        width: 18px;
        left: 0;
        top: 3px;
        position: absolute;
        border-radius: 5px;

        &:after {
          content: "";
          margin: 2px;
          top: 0;
          left: 0;
          position: absolute;
          height: 12px;
          width: 12px;
          opacity: 0;
          border-radius: 3px;
          background-color: var(--secondary);
        }
      }
    }

    &[data-checked="true"] {
      text-decoration: line-through;
      text-decoration-color: var(--gray);
      color: var(--gray);

      >label>span {
        &:after {
          opacity: 1;
        }
      }
    }

    >div {
      flex: 1 1 auto;
    }
  }

  input[type="checkbox"] {
    cursor: pointer;
    visibility: hidden;
  }

  ul[data-type="taskList"] {
    margin: 0;
  }
}

// Code block with copy button styles
.code-block-wrapper {
  position: relative;
  
  pre {
    position: relative;
    padding: 0.75em;
    border-radius: 3px;
    background: #2e2e2e;
    
    code {
      background: transparent;
      padding: 0;
      font-size: 0.85em;
    }
  }
  
  .code-copy-button {
    position: absolute;
    top: 8px;
    right: 8px;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 4px;
    padding: 4px 6px;
    cursor: pointer;
    color: #fff;
    font-size: 14px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    z-index: 10;
    
    &:hover {
      background: rgba(255, 255, 255, 0.2);
      border-color: rgba(255, 255, 255, 0.3);
    }
    
    &:active {
      transform: scale(0.95);
    }
    
    svg {
      width: 16px;
      height: 16px;
      fill: currentColor;
    }
  }
}
